<center><span id="errors"></span></center>

<div class="pos-neg-lev">

  <h1>Positive vs. Negative Leverage</h1>

  <div class="diagram">
  <form id="pos-neg-lev-form">
    <div class="top-box">
      <div class="purchase-price">
        <label for="pos_neg_leverage_purchase_price">Purchase Price</label><br>

        &#36; <input
          class="add-commas"
          id="pos_neg_leverage_purchase_price"
          name="pos_neg_leverage[purchase_price]"
          value="<%= number_with_precision(@pos_neg_leverage.purchase_price, :precision => 0, :delimiter => ',') %>">
      </div>

      <div class="loan-amount">
        <label for="pos_neg_leverage_loan_amount">Loan Amount</label><br>

        &#36; <input
          class="add-commas"
          id="pos_neg_leverage_loan_amount"
          name="pos_neg_leverage[loan_amount]"
          value="<%= number_with_precision(@pos_neg_leverage.loan_amount, :precision => 0, :delimiter => ',') %>">
      </div>

      <div class="interest-only">
        <label for="pos_neg_leverage_interest_only">Interest Only</label><br>

        <input type="radio" name="pos_neg_leverage[interest_only]" value="Yes" <%= "checked" if @pos_neg_leverage.interest_only %>> Yes&nbsp;&nbsp;&nbsp;

        <input type="radio" name="pos_neg_leverage[interest_only]" value="No" <%= "checked" unless @pos_neg_leverage.interest_only %>> No
      </div>
    </div>

    <div class="top-box">
      <div class="cap-rate">
        <label for="pos_neg_leverage_cap_rate">Cap Rate</label><br>

        <input
          class="remove-chars"
          id="pos_neg_leverage_cap_rate"
          name="pos_neg_leverage[cap_rate]"
          value="<%= remove_trailing_zeros(@pos_neg_leverage.cap_rate) %>"> &#37;
      </div>

      <div class="low-interest-rate">
        <label for="pos_neg_leverage_low_interest_rate">Low Interest Rate</label><br>

        <input
          class="remove-chars"
          id="pos_neg_leverage_low_interest_rate"
          name="pos_neg_leverage[low_interest_rate]"
          value="<%= remove_trailing_zeros(@pos_neg_leverage.low_interest_rate) %>"> &#37;
      </div>

      <div class="high-interest-rate">
        <label for="pos_neg_leverage_high_interest_rate">High Interest Rate</label><br>
        <input
          class="remove-chars"
          id="pos_neg_leverage_high_interest_rate"
          name="pos_neg_leverage[high_interest_rate]"
          value="<%= remove_trailing_zeros(@pos_neg_leverage.high_interest_rate) %>"> &#37;
      </div>

      <div class="amortization">
        <label for="pos_neg_leverage_amortization">Amortization</label><br>

        <select name="pos_neg_leverage[amortization]">
          <% [5, 7, 10, 15, 20, 25, 30].each do |num| %>
            <option value="<%= num %>" <%= "selected" if @pos_neg_leverage.amortization == num  %>><%= num %> years</option>
          <% end %>
        </select>
      </div>
    </div>
  </form>

  <br><br>

  <div class="top-box">
    <div class="inner">Investment @ <br>
      <span class="cap-rate-span">
        <%= remove_trailing_zeros(@pos_neg_leverage.cap_rate) %></span>% Cap Rate
    </div>

    <div class="investment-top">
      &#36;<span id="purchase-price-span"><%= number_with_precision(@pos_neg_leverage.purchase_price, :precision => 0, :delimiter => ',') %>
      </span>
    </div>
  </div>

  <div class="top-box">
    <div class="inner4">Leveraged (Borrowing) vs. Unleveraged</div>

    <div class="middle">Borrow <br>Nothing</div>

    <div class="left">
      &#36;<span class="loan-amount-span"><%= number_with_precision(@pos_neg_leverage.loan_amount, :precision => 0, :delimiter => ',') %>
      </span> &#64;<br>
      <font color="black">
        <span id="low-interest-rate-span">
          <%= remove_trailing_zeros(@pos_neg_leverage.low_interest_rate) %></span>&#37;
      </font> Interest
    </div>

    <div class="right">
      &#36;<span class="loan-amount-span"><%= number_with_precision(@pos_neg_leverage.loan_amount, :precision => 0, :delimiter => ',') %>
      </span> &#64;<br>
      <font color="black">
        <span id="high-interest-rate-span">
          <%= remove_trailing_zeros(@pos_neg_leverage.high_interest_rate) %></span>&#37;
      </font> Interest
    </div>
  </div>

  <div class="top-box">
    <div class="inner">Net Operating <br>Income</div>

    <div class="investment">
      &#36;<span class="net-operating-income-span"><%= number_with_precision(@pos_neg_leverage.net_operating_income, :precision => 0, :delimiter => ',') %>
      </span>
    </div>

    <div class="left2">
      &#36;<span class="net-operating-income-span"><%= number_with_precision(@pos_neg_leverage.net_operating_income, :precision => 0, :delimiter => ',') %>
      </span>
    </div>

    <div class="right2">
      &#36;<span class="net-operating-income-span"><%= number_with_precision(@pos_neg_leverage.net_operating_income, :precision => 0, :delimiter => ',') %>
      </span>
    </div>
  </div>

  <div class="top-box">
    <div class="inner">Debt Service <br>Payments</div>

    <div class="investment">$0</div>

    <div class="left2">
      &#36;<span id="debt-service-low-interest-rate-span"><%= number_with_precision(@pos_neg_leverage.debt_service_low_interest_rate, :precision => 0, :delimiter => ',') %>
      </span>
    </div>

    <div class="right2">
      &#36;<span id="debt-service-high-interest-rate-span"><%= number_with_precision(@pos_neg_leverage.debt_service_high_interest_rate, :precision => 0, :delimiter => ',') %>
      </span>
    </div>
  </div>

  <div class="top-box">
    <div class="inner2">Cash Flow</div>

    <div class="investment2">
      &#36;<span class="net-operating-income-span"><%= number_with_precision(@pos_neg_leverage.net_operating_income, :precision => 0, :delimiter => ',') %>
      </span>
    </div>

    <div class="left3">
      &#36;<span id="cash-flow-low-interest-rate-span"><%= number_with_precision(@pos_neg_leverage.cash_flow_low_interest_rate, :precision => 0, :delimiter => ',') %>
      </span>
    </div>
    <div class="right3">
      &#36;<span id="cash-flow-high-interest-rate-span"><%= number_with_precision(@pos_neg_leverage.cash_flow_high_interest_rate, :precision => 0, :delimiter => ',') %>
      </span>
    </div>
  </div>

  <div class="top-box">
    <div class="inner3">Cash on Cash <br>(Income Earned / <br>Initial Investment)</div>

    <div class="middle-result">
      <span class="cap-rate-span">
        <%= remove_trailing_zeros(@pos_neg_leverage.cap_rate) %></span>&#37;
    </div>

    <div class="left-result">
      <span id="cash-on-cash-low-interest-rate">
        <%= @pos_neg_leverage.cash_on_cash_low_interest_rate %></span>&#37;
    </div>

    <div class="right-result">
      <span id="cash-on-cash-high-interest-rate">
        <%= @pos_neg_leverage.cash_on_cash_high_interest_rate %></span>&#37;
    </div>
  </div>

  <div class="flow"></div>

  <div class="flow2"></div>
</div>

<br><br><br>



<script language="JavaScript">

  function truncate(x) {
    x = removeDoubles(x);
    x = Number(x.replace(/[^\d.-]/g, ''));
    return Math.round(x * 100) / 100.0;
  }

  var addCommas = function(event) {
    if(event.which >= 37 && event.which <= 40){
      event.preventDefault();
    }
    var $this = $(this);
    var num = $this.val().replace(/(\s)/g, '');
    num = num.replace (/,/g, "");
    num = num.replace(/[^\d.-]/g, '');
    num = removeDoubles(num);
    num = Number(num);
    if (num > 0) {
      num = Math.floor(num);
    } else {
      num = Math.ceil(num);
    }
    num = num.toString();
    $this.val(num.replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,"));
  }

  var removeChars = function(event) {
    if(event.which >= 37 && event.which <= 40){
      event.preventDefault();
    }
    var $this = $(this);
    var num = $this.val();
    num = removeDoubles(num);
    $this.val(truncate(num));
  }

  var commasFloor = function(x) {
    x = x.replace(/(\s)/g, '');
    x = x.replace (/,/g, "");
    x = x.replace(/[^\d.-]/g, '');
    x = removeDoubles(x);
    x = Number(x);
    if (x > 0) {
      x = Math.floor(x);
    } else {
      x = Math.ceil(x);
    }
    x = x.toString();
    x = x.replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,");
    return x;
  }

  var removeDoubles = function (x) {
    return removeDoubleNegative(removeDoublePeriod(x));
  }

  var removeDoublePeriod = function(x) {
    return x.replace(/\./, "x")
      .replace(/\./g, "")
      .replace(/x/, ".");
  }

  var removeDoubleNegative = function(x) {
    return x.replace(/\-/, "x")
      .replace(/\-/g, "")
      .replace(/x/, "-");
  }

  function updateFields() {

    String.prototype.capitalize = function() {
      return this.charAt(0).toUpperCase() + this.slice(1);
    }

    var data = $("#pos-neg-lev-form").serializeJSON();

    var success = function (data) {
      $("#errors").text("");

      var purchasePrice = commasFloor($("#pos_neg_leverage_purchase_price").val());
      var loanAmount = commasFloor($("#pos_neg_leverage_loan_amount").val());
      var capRate = truncate($("#pos_neg_leverage_cap_rate").val());
      var lowInterestRate = truncate($("#pos_neg_leverage_low_interest_rate").val());
      var highInterestRate = truncate($("#pos_neg_leverage_high_interest_rate").val());

      var netOperatingIncome = data["net_operating_income"];
      var debtServiceLowInterestRate = data["debt_service_low_interest_rate"];
      var debtServiceHighInterestRate = data["debt_service_high_interest_rate"];
      var cashFlowLowInterestRate = data["cash_flow_low_interest_rate"];
      var cashFlowHighInterestRate = data["cash_flow_high_interest_rate"];
      var cashOnCashLowInterestRate = data["cash_on_cash_low_interest_rate"];
      var cashOnCashHighInterestRate = data["cash_on_cash_high_interest_rate"];

      $("#purchase-price-span").text(purchasePrice);
      $(".loan-amount-span").text(loanAmount);
      $(".cap-rate-span").text(capRate);
      $("#low-interest-rate-span").text(lowInterestRate);
      $("#high-interest-rate-span").text(highInterestRate);

      $(".net-operating-income-span").text(netOperatingIncome);
      $("#debt-service-low-interest-rate-span").text(debtServiceLowInterestRate);
      $("#debt-service-high-interest-rate-span").text(debtServiceHighInterestRate);
      $("#cash-flow-low-interest-rate-span").text(cashFlowLowInterestRate);
      $("#cash-flow-high-interest-rate-span").text(cashFlowHighInterestRate);
      $("#cash-on-cash-low-interest-rate").text(cashOnCashLowInterestRate);
      $("#cash-on-cash-high-interest-rate").text(cashOnCashHighInterestRate);

    }

    var error = function (data) {
      $("#errors").text("");
      var $errorTitle = $("<h3>Please fix the following errors:</h3>");
      $("#errors").append($errorTitle);
      var responseText = data["responseText"];
      var responseObj = JSON.parse(responseText);
      var keys = Object.keys(responseObj);
      for (var i=0; i<keys.length; i++) {
        var key = keys[i];
        $("#errors").append(
          key.replace(/_/g, ' ').capitalize() + 
          " " + responseObj[key] + "<br />"
        );
      }
      $("#errors").append($("<hr>"));
    }

    $.ajax({
      type: "PUT",
      url: "<%= api_pos_neg_leverage_update_url %>",
      data: data,
      success: success,
      error: error,
      dataType: "json"
    });

  }

  $('input.add-commas').change(addCommas);
  $('input.remove-chars').change(removeChars);

  //setup onchange and onkeyup to call updatefields when value has changed
  document.getElementById("pos-neg-lev-form").onchange = updateFields;
  document.getElementById("pos-neg-lev-form").onkeyup = updateFields;

</script>